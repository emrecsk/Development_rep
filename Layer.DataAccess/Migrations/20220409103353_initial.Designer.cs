// <auto-generated />
using Layer.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Layer.DataAccess.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20220409103353_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Layer.Entity.Entities.Devices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Device_Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("TypesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TypesId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Device_Name = "Device 1",
                            IsActive = true,
                            LocationId = 1,
                            OrganizationId = 1,
                            TypesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Device_Name = "Device 2",
                            IsActive = true,
                            LocationId = 1,
                            OrganizationId = 1,
                            TypesId = 2
                        },
                        new
                        {
                            Id = 3,
                            Device_Name = "Device 3",
                            IsActive = true,
                            LocationId = 2,
                            OrganizationId = 2,
                            TypesId = 2
                        },
                        new
                        {
                            Id = 4,
                            Device_Name = "Device 4",
                            IsActive = true,
                            LocationId = 3,
                            OrganizationId = 2,
                            TypesId = 3
                        },
                        new
                        {
                            Id = 5,
                            Device_Name = "Device 5",
                            IsActive = true,
                            LocationId = 3,
                            OrganizationId = 3,
                            TypesId = 2
                        });
                });

            modelBuilder.Entity("Layer.Entity.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Loc_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Loc_Name = "Aarhus"
                        },
                        new
                        {
                            Id = 2,
                            Loc_Name = "Skanderborg"
                        },
                        new
                        {
                            Id = 3,
                            Loc_Name = "Odder"
                        });
                });

            modelBuilder.Entity("Layer.Entity.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Org_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Org_Name = "TetraPak"
                        },
                        new
                        {
                            Id = 2,
                            Org_Name = "Aarhus University"
                        },
                        new
                        {
                            Id = 3,
                            Org_Name = "Municipality"
                        });
                });

            modelBuilder.Entity("Layer.Entity.Entities.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type_Name = "Camera"
                        },
                        new
                        {
                            Id = 2,
                            Type_Name = "Sensor"
                        },
                        new
                        {
                            Id = 3,
                            Type_Name = "Type 3"
                        });
                });

            modelBuilder.Entity("Layer.Entity.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            Name = "User 1",
                            OrganizationId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsAdmin = false,
                            Name = "User 2",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsAdmin = false,
                            Name = "User 3",
                            OrganizationId = 3
                        });
                });

            modelBuilder.Entity("Layer.Entity.Entities.Devices", b =>
                {
                    b.HasOne("Layer.Entity.Entities.Location", "Location")
                        .WithMany("Devices")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Layer.Entity.Entities.Organization", "Organization")
                        .WithMany("Devices")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Layer.Entity.Entities.Types", "Types")
                        .WithMany("Devices")
                        .HasForeignKey("TypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Organization");

                    b.Navigation("Types");
                });

            modelBuilder.Entity("Layer.Entity.Entities.Users", b =>
                {
                    b.HasOne("Layer.Entity.Entities.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Layer.Entity.Entities.Location", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Layer.Entity.Entities.Organization", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Layer.Entity.Entities.Types", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
