<!DOCTYPE html>
<html style="height: auto;" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administration - TitanIT</title>
    <link rel="stylesheet" href="Administration-TitanIT_files/adminlte.css">
    <link rel="stylesheet" href="Administration-TitanIT_files/bootstrap.css">
    <link rel="stylesheet" href="Administration-TitanIT_files/all.css">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    <script>

        // Include dynamic CSS file reference
        function addCSS(filename) {
            var head = document.getElementsByTagName('head')[0];

            var style = document.createElement('link');
            style.href = filename;
            style.type = 'text/css';
            style.rel = 'stylesheet';
            head.append(style);
        }

        var host = window.location.host;
        if (host == "dashboard.aguardio.com") {
            addCSS("https://dashboard.aguardio.com/staticwebcontent/custom-css/aguardio/design.css")
        }
        else if (host == "sponsor.manydigital.com") {
            addCSS("https://sponsor.manydigital.com/staticwebcontent/custom-css/manydigital/design.css");
        }
        else if (host == "tools.di2x.com") {
            addCSS("https://tools.di2x.com/staticwebcontent/custom-css/di2x/design.css");
        }
        else if (host == "vestkysten.titanit.io") {
            addCSS("https://vestkysten.titanit.io/staticwebcontent/custom-css/vestkysten/design.css");
        }
        else {
            addCSS("https://titanit.io/staticwebcontent/custom-css/titan/design.css")
            // addCSS("https://titanit.io/staticwebcontent/custom-css/vestkysten/design.css");

        }

    </script>
    <link href="Administration-TitanIT_files/design.css" type="text/css" rel="stylesheet">
    <link rel="stylesheet" href="~/design.css">
    <link rel="stylesheet" href="~/font_awesome/css/font-awesome.css">
    <link rel="stylesheet" href="Administration-TitanIT_files/site.css">
    <script src="Administration-TitanIT_files/jquery.js"></script>
    <script src="Administration-TitanIT_files/bootstrap.js"></script>


</head>
<body class="sidebar-mini layout-fixed" style="height: auto;" data-new-gr-c-s-check-loaded="8.895.0" data-gr-ext-installed="">

    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars" aria-hidden="true"></i></a>
                </li>
            </ul>
            <ul class="navbar-nav ml-auto">
                <!-- Login Menu -->
                <li class="nav-item dropdown">
                    <a class="dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: gray">
                        <i class="fa fa-user"></i>
                        <!--
                                <i class="fa fa-user"></i>
                        -->
                        Seebach, Torben
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown" style="color: gray">
                        <a class="dropdown-item" target="_blank" href="https://nttdata-solutions.com/dk/privacy/#cookie-declaration">Cookie Policy</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="https://titanit.io/MicrosoftIdentity/Account/SignOut">Sign out</a>
                        <a class="dropdown-item" href="https://titanit.io/Home/Profile">Who am I</a>
                    </div>
                </li>
            </ul>
        </nav>

        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-light-primary elevation-2">
            <!-- Brand Logo -->
            <a class="brand-link logo-switch" href="https://titanit.io/">
                <div class="company-logo"> <img src="~/logo.png" /> </div>
            </a>
            <!--
            <a asp-area="" asp-controller="Home" asp-action="Index" class="brand-link logo-switch">
                <img src="" alt="" class="brand-image-xs logo-xl">
                <img src="" alt="" class="brand-image-xl logo-xs">
            </a>
                -->
            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <!-- Add icons to the links using the .nav-icon class
                        with font-awesome or any other icon font library -->
                        <li class="nav-item">
                            <a class="nav-link " href="https://titanit.io/">
                                <i class="nav-icon fa fa-home"></i>
                                <p>
                                    Home
                                </p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " href="https://titanit.io/Home/GlobalAdministration">
                                <i class="nav-icon fa fa-cogs"></i>
                                <p>
                                    Titan
                                </p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="https://titanit.io/Home/Administration">
                                <i class="nav-icon fa fa-cog"></i>
                                <p>
                                    Organizations
                                </p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " href="https://titanit.io/Home/UserAdministration">
                                <i class="nav-icon fa fa-users"></i>
                                <p>
                                    Users
                                </p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " href="https://titanit.io/Home/Modules">
                                <i class="nav-icon fa fa-cubes"></i>
                                <p>
                                    Modules
                                </p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " href="https://titanit.io/Home/UserModules">
                                <i class="nav-icon fa fa-user"></i>
                                <p>
                                    User Modules
                                </p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " href="https://titanit.io/Home/Info">
                                <i class="nav-icon fa fa-info-circle"></i>
                                <p>
                                    Information
                                </p>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <div class="content-wrapper" style="min-height: 875px;">
            <main role="main" class="pb-3">

                <!--<script src="https://cdn.datatables.net/responsive/2.2.5/js/dataTables.responsive.min.js"></script>-->
                <!-- Datatables CSS -->
                <link rel="stylesheet" href="Administration-TitanIT_files/jquery.css" crossorigin="anonymous">
                <link rel="stylesheet" href="Administration-TitanIT_files/buttons.css">
                <link rel="stylesheet" href="Administration-TitanIT_files/select.css">
                <link rel="stylesheet" href="Administration-TitanIT_files/editor.css">
                <link rel="stylesheet" href="Administration-TitanIT_files/titantables.css">


                <!-- Datatables scripts -->
                <script src="Administration-TitanIT_files/jquery_002.js" crossorigin="anonymous"></script>
                <script src="Administration-TitanIT_files/dataTables_002.js" crossorigin="anonymous"></script>
                <script src="Administration-TitanIT_files/dataTables_003.js" crossorigin="anonymous"></script>
                <script src="Administration-TitanIT_files/dataTables.js"></script>

                <script>
                    var orgEditor;
                    var departmentEditor;


                    $(document).ready(function () {
                        // ORGANIZATION
                        orgEditor = new $.fn.dataTable.Editor({
                            ajax: "/Home/Index",
                            table: "#Organizations",
                            //  idSrc: 'ID',
                            fields: [
                                {
                                    label: "Organization:",
                                    name: "Organizations.Organization",
                                    attr: {
                                        required: true,
                                        name: 'Organizations.Organization',
                                    }
                                },
                                {
                                    label: "Parent Organization:",
                                    name: "Organizations.ParentOrganizationID",
                                    type: "select",
                                    placeholder: "Select a parent organization"
                                },
                                {
                                    label: "Azure AD Group:",
                                    name: "Organizations.AzureADGroup",
                                    type: 'readonly',
                                    attr: { disabled: true }
                                },
                                {
                                    label: "Internal Name:",
                                    name: "Organizations.InternalName",
                                    fieldInfo: "Internal Database name. Cannot be modified after creation"
                                },
                                {
                                    label: "Active:",
                                    type: "checkbox",
                                    separator: "|",
                                    def: 1,
                                    options: [{ label: '', value: 1 }],
                                    name: "Organizations.Active",
                                    fieldInfo: "Deactivating an organization will prevent accessing data for that entire organization. No data is deleted"
                                }
                            ]
                        });
                        $('#Organizations').DataTable({
                            dom: '<"orgtitle">Bfrtip',
                            ajax: {
                                url: "/Home/Index",
                            },
                            columns: [
                                { data: "Device ID" },
                                { data: "Device Name" },
                                { data: "Location" },
                                { data: "Types" },
                                { data: "OrganizationId" },
                                {
                                    data: "Is Active", "render": function (data, type, row, meta) {
                                        if (data == 1) { return '<i class="fa fa-check"></i>' }
                                        else { return 'x' }
                                    }
                                }
                            ],
                            // Hide columns from main table view
                            columnDefs: [
                                {
                                    "targets": [2],
                                    "visible": false,
                                    "searchable": false
                                },
                                {
                                    "targets": [3],
                                    "visible": false,
                                    "searchable": false
                                }
                            ],
                            select: true,
                            buttons: [
                                { extend: "create", editor: orgEditor, formTitle:"Create new Organization" },
                                { extend: "edit", editor: orgEditor, formTitle: "Edit Organization" },
                                { extend: "remove", editor: orgEditor, formTitle: "Delete Organization" },
                                {
                                    text: 'Synchronize',
                                    attr: {
                                        id: 'syncOrg'
                                    },
                                    action: function (e, dt, node, config) {

                                        // Call the data-factory controller and trigger
                                       $.ajax({
                                            url: '/api/startpipeline',
                                            type: "POST",
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                           success: function (result) {
                                                $("#syncOrg").prop("disabled", false);
                                                $("#syncOrg").html(`<span>Synchronize</span>`);
                                                // Show the modal
                                                $("#syncModal .modal-body").text('The datafactory synchronization task has started successfully with id ' + result);
                                                $('#syncModal').modal('show');
                                            },
                                            error: function (error) {
                                                {
                                                    $("#syncOrg").prop("disabled", false);
                                                    $("#syncOrg").html(`<span>Synchronize</span>`);
                                                    // Show modal error message
                                                    $("#syncModal .modal-body").text("Error starting the ADF pipeline.Error message" + error.statusText);
                                                    $('#syncModal').modal('show');
                                                }
                                            }
                                        });
                                    }
                                }
                            ]
                        });

                        // Event trigger for editing a record
                        orgEditor.on('initEdit', function () {
                            orgEditor.show(); //Shows all fields
                            orgEditor.disable('Organizations.InternalName');
                            orgEditor.disable('Organizations.AzureADGroup');
                        });

                        // Event trigger for creating a new record
                        orgEditor.on('initCreate', function () {
                            orgEditor.show(); //Shows all fields
                            orgEditor.enable('Organizations.InternalName');
                            orgEditor.hide('Organizations.AzureADGroup');
                        });

                        // Event handler triggered after creating a new org
                        orgEditor.on('create', function (e, json, data) {
                            // Get Created internal name
                            var postedOrg = data.Organizations.InternalName;
                        });


                        // DEPARTMENT
                        departmentEditor = new $.fn.dataTable.Editor({
                            ajax: "/api/department",
                            table: "#Departments",
                            //  idSrc: 'ID',
                            fields: [
                                {
                                    label: "Department:",
                                    name: "Departments.Department",
                                    attr: {
                                        required: true,
                                        name: 'Departments.Department',
                                    }
                                },
                                {
                                    label: "Organization:",
                                    name: "Departments.OrganizationID",
                                    type: "select",
                                    placeholder: "Select a parent organization"
                                },
                                {
                                    label: "Azure AD Group:",
                                    name: "Departments.AzureADGroup",
                                    type: 'readonly',
                                    attr: { disabled: true }
                                },
                                {
                                    label: "Internal Name:",
                                    name: "Departments.InternalName",
                                    fieldInfo: "Internal Database name. Cannot be modified after creation"
                                },
                                {
                                    label: "Active:",
                                    type: "checkbox",
                                    separator: "|",
                                    def: 1,
                                    options: [{ label: '', value: 1 }],
                                    name: "Departments.Active",
                                    fieldInfo: "Deactivating an organization will prevent accessing data for that entire organization. No data is deleted"
                                }
                            ]
                        });
                        $('#Departments').DataTable({
                            dom: '<"departmenttitle">Bfrtip',
                            ajax: {
                                url: "/api/department",
                            },
                            columns: [
                                { data: "Departments.Department" },
                                { data: "Organizations.Organization" },
                                { data: "Departments.AzureADGroup" },
                                { data: "Departments.InternalName" },
                                {
                                    data: "Departments.Active", "render": function (data, type, row, meta) {
                                        if (data == 1) { return '<i class="fa fa-check"></i>' }
                                        else { return 'x' }
                                    }
                                }
                            ],
                            columnDefs: [
                                {
                                    "targets": [2],
                                    "visible": false,
                                    "searchable": false
                                },
                                {
                                    "targets": [3],
                                    "visible": false,
                                    "searchable": false
                                }
                            ],
                            select: true,
                            buttons: [
                                { extend: "create", editor: departmentEditor, formTitle: "Create new Department"  },
                                { extend: "edit", editor: departmentEditor, formTitle: "Edit Department" },
                                { extend: "remove", editor: departmentEditor, formTitle: "Delete Department" },
                                {
                                    text: 'Synchronize',
                                    attr: {
                                        id: 'syncDep'
                                    },
                                    action: function (e, dt, node, config) {

                                        // Call the data-factory controller and trigger
                                       $.ajax({
                                            url: '/api/startpipeline',
                                            type: "POST",
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                           success: function (result) {
                                                $("#syncDep").prop("disabled", false);
                                                $("#syncDep").html(`<span>Synchronize</span>`);
                                                // Show the modal
                                                $("#syncModal .modal-body").text('The datafactory synchronization task has started successfully with id ' + result);
                                                $('#syncModal').modal('show');
                                            },
                                            error: function (error) {
                                                {
                                                    $("#syncDep").prop("disabled", false);
                                                    $("#syncDep").html(`<span>Synchronize</span>`);
                                                    // Show modal error message
                                                    $("#syncModal .modal-body").text("Error starting the ADF pipeline.Error message" + error.statusText);
                                                    $('#syncModal').modal('show');
                                                }
                                            }
                                        });
                                    }
                                }
                            ]
                        });

                        // Event trigger for editing a record
                        departmentEditor.on('initEdit', function () {
                            departmentEditor.show(); //Shows all fields
                            departmentEditor.disable('Departments.InternalName');
                            departmentEditor.disable('Departments.AzureADGroup');
                        });

                        // Event trigger for creating a new record
                        departmentEditor.on('initCreate', function () {
                            departmentEditor.show(); //Shows all fields
                            departmentEditor.enable('Departments.InternalName');
                            departmentEditor.hide('Departments.AzureADGroup');
                        });

                        orgEditor.on('create edit remove', function (e, json, data) {
                            // When updating parent tables refresh dependent tables
                            // Note module registrations uses cascading dropdown's that are dynamically populated. So we dont need to auupdate these
                            $('#Departments').DataTable().ajax.reload();
                        });


                        // OTHER STUFF
                        $("div.orgtitle").html('<div class="tableheader">Organizations</div>');
                        $("div.departmenttitle").html('<div class="tableheader">Departments</div>');


                        // When clicking the button disable and do the spin
                        $("#syncOrg").click(function () {
                            // disable button
                            $(this).prop("disabled", true);
                            // add spinner to button
                            $(this).html(
                                `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Synching...`
                            );
                        });

                        $("#syncDep").click(function () {
                            // disable button
                            $(this).prop("disabled", true);
                            // add spinner to button
                            $(this).html(
                                `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Synching...`
                            );
                        });

                    });

                </script>

                <div class="container-fluid px-4 py-4" id="tileContainer">
                    <div class="content-header pageheader">
                        Administration
                    </div>
                    <div class="px-2">
                        <p>
                            Manage Organizations and Departments for your setup.
                            Organizations function as the primary security and grouping mechanism on
                            Titan.
                            Users and modules are linked to an organization, and users can
                            only be associated with modules within the same organization.
                        </p>

                        @RenderBody()

                    </div>
                </div>
                <!-- Modal HTML -->
                <div id="syncModal" class="modal fade">
                    <div class="modal-dialog modal-confirm">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title w-100">Synchronization Status</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div class="modal-body">
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
        <div id="sidebar-overlay"></div>
    </div>
    <script src="Administration-TitanIT_files/adminlte.js"></script>
    <script src="Administration-TitanIT_files/site.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
<grammarly-desktop-integration data-grammarly-shadow-root="true"></grammarly-desktop-integration>
</html>